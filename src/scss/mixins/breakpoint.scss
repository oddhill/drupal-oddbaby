// Breakpoint mixins

// Get the minimum width of the specified breakpoint from the list of
// breakpoints.
//
// If the breakpoint is the smallest with a value 0 a null value will be
// returned.
@function get-breakpoint-min-width($name, $breakpoints: $breakpoints) {
  $min-width: map-get($breakpoints, $name);
  @return if($min-width != 0, $min-width, null);
}

// Name of the next breakpoint, or null for the last breakpoint.
//
//    >> breakpoint-next(sm)
//    md
//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))
//    md
//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))
//    md
@function breakpoint-next($name, $breakpoints: $breakpoints, $breakpoint-names: map-keys($breakpoints)) {
  $n: index($breakpoint-names, $name);
  @return if($n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);
}

// Maximum breakpoint width. Null for the largest (last) breakpoint.
// The maximum value is calculated as the minimum of the next one less 0.02px
// to work around the limitations of `min-` and `max-` prefixes and viewports with fractional widths.
// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max
// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.
// See https://bugs.webkit.org/show_bug.cgi?id=178261
//
//    >> breakpoint-max(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))
//    767.98px
@function get-breakpoint-max-width($name, $breakpoints: $breakpoints) {
  $next: breakpoint-next($name, $breakpoints);
  @return if($next, get-breakpoint-min-width($next, $breakpoints) - .02px, null);
}

// Wrap styling for the specified breakpoint and up, will not apply a media
// query to the smallest width.
@mixin media-breakpoint-up($name, $breakpoints: $breakpoints) {
  $min-width: get-breakpoint-min-width($name, $breakpoints);
  @if $min-width {
    @media (min-width: $min-width) {
      @content;
    }
  } @else {
    @content;
  }
}

// Media of at most the maximum breakpoint width. No query for the largest breakpoint.
// Makes the @content apply to the given breakpoint and narrower.
@mixin media-breakpoint-down($name, $breakpoints: $breakpoints) {
  $max: get-breakpoint-max-width($name, $breakpoints);
  @if $max {
    @media (max-width: $max) {
      @content;
    }
  } @else {
    @content;
  }
}
